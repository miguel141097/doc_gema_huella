var search_data = {"index":{"searchIndex":["alimento","huella","error","lista","object","platoambiental","platonutricional","*()","+()","<=>()","<=>()","<=>()","==()","==()","==()","at()","cantnodos()","each()","energiamenu()","geimenu()","geteficienciaenergeticaformateada()","getgeianual()","getgeianualplato()","getgeidiario()","getgeidiarioplato()","getgeix100gr()","getindiceenergia()","getindicehuellacarbono()","getporcentajecarbohidratosplato()","getporcentajelipidosplato()","getporcentajeproteinasplato()","getprocentajecarbohidratos()","getprocentajelipidos()","getprocentajeproteinas()","getterrenoplato()","getterrenototal()","getvalorenergetico()","getvalorenergeticoplato()","huellanutricional()","incrementarpreciosdirectamente()","incrementarprecioswithporcentaje()","isvacia()","mediahuellanutricional()","new()","new()","new()","new()","pop()","push()","pushall()","shift()","to_s()","to_s()","to_s()","unshift()","gemfile","gemfile.lock","guardfile","readme","rakefile","setup","huella.gemspec"],"longSearchIndex":["alimento","huella","huella::error","lista","object","platoambiental","platonutricional","alimento#*()","alimento#+()","alimento#<=>()","platoambiental#<=>()","platonutricional#<=>()","alimento#==()","lista#==()","platonutricional#==()","lista#at()","lista#cantnodos()","lista#each()","object#energiamenu()","object#geimenu()","platoambiental#geteficienciaenergeticaformateada()","lista#getgeianual()","platoambiental#getgeianualplato()","lista#getgeidiario()","platoambiental#getgeidiarioplato()","alimento#getgeix100gr()","alimento#getindiceenergia()","alimento#getindicehuellacarbono()","platonutricional#getporcentajecarbohidratosplato()","platonutricional#getporcentajelipidosplato()","platonutricional#getporcentajeproteinasplato()","lista#getprocentajecarbohidratos()","lista#getprocentajelipidos()","lista#getprocentajeproteinas()","platoambiental#getterrenoplato()","lista#getterrenototal()","alimento#getvalorenergetico()","platonutricional#getvalorenergeticoplato()","platoambiental#huellanutricional()","object#incrementarpreciosdirectamente()","object#incrementarprecioswithporcentaje()","lista#isvacia()","object#mediahuellanutricional()","alimento::new()","lista::new()","platoambiental::new()","platonutricional::new()","lista#pop()","lista#push()","lista#pushall()","lista#shift()","alimento#to_s()","lista#to_s()","platonutricional#to_s()","lista#unshift()","","","","","","",""],"info":[["Alimento","","Alimento.html","","<p>Representa un alimento con su nombre y sus\n<p>valores energéticos: Proteinas carbohidratos y lipidos\n<p>valores …\n"],["Huella","","Huella.html","","<p>Aquí se coloca el código público de la gema\n<p>Se crea por defecto y declara la constante VERSION de la gema …\n"],["Huella::Error","","Huella/Error.html","",""],["Lista","","Lista.html","","<p>Es una abstración de una lista doblemente enlazada, es decir se puede recorrer en ambos sentidos. En …\n"],["Object","","Object.html","",""],["PlatoAmbiental","","PlatoAmbiental.html","","<p>Es una clase hija de PlatoNutricional, encapsula los métodos ambientales de un Plato. Al igual que en …\n"],["PlatoNutricional","","PlatoNutricional.html","","<p>Representa a un Plato con su nombre, formado por un conjunto de alimentos con sus  respectivas cantidades. …\n"],["*","Alimento","Alimento.html#method-i-2A","(value)","<p>Retorna un nuevo Alimento resultado de la multiplicación de un Alimento por un escalar\n"],["+","Alimento","Alimento.html#method-i-2B","(other)","<p>Retorna un nuevo Alimento resultado de la suma de otros dos alimentos\n"],["<=>","Alimento","Alimento.html#method-i-3C-3D-3E","(other)","<p>Compara cada Alimento según su valor energético\n"],["<=>","PlatoAmbiental","PlatoAmbiental.html#method-i-3C-3D-3E","(other)","<p>Compara dos Platos según la huella nutricional\n"],["<=>","PlatoNutricional","PlatoNutricional.html#method-i-3C-3D-3E","(other)","<p>Compara dos Platos según su valor energético\n"],["==","Alimento","Alimento.html#method-i-3D-3D","(other)","<p>Dos Alimentos son iguales si tienen los mismos atributos\n"],["==","Lista","Lista.html#method-i-3D-3D","(other)","<p>Dos listas son iguales si tienen exactamente los mismos elementos y en el mismo orden\n"],["==","PlatoNutricional","PlatoNutricional.html#method-i-3D-3D","(other)","<p>Dos Platos son iguales si todos sus atributos lo son\n"],["at","Lista","Lista.html#method-i-at","(pos)","<p>Accede a un elemento dada la posición\n"],["cantNodos","Lista","Lista.html#method-i-cantNodos","()","<p>Devuelve la cantidad de elementos\n"],["each","Lista","Lista.html#method-i-each","()","<p>Implementación del método each para utilizar los demás métodos del módulo enumerable\n"],["energiaMenu","Object","Object.html#method-i-energiaMenu","()",""],["geiMenu","Object","Object.html#method-i-geiMenu","()",""],["getEficienciaEnergeticaFormateada","PlatoAmbiental","PlatoAmbiental.html#method-i-getEficienciaEnergeticaFormateada","()","<p>Se calcula la relación GEI/valorEnegertico y la retorna formateada\n"],["getGeiAnual","Lista","Lista.html#method-i-getGeiAnual","()","<p>Retorna los gases de efecto invernadero producidos en un año\n"],["getGeiAnualPlato","PlatoAmbiental","PlatoAmbiental.html#method-i-getGeiAnualPlato","()","<p>Retorna los gases de efecto invernadero producidos en un año por un plato\n"],["getGeiDiario","Lista","Lista.html#method-i-getGeiDiario","()","<p>Retorna los gases de efecto invernadero producidos en un día\n"],["getGeiDiarioPlato","PlatoAmbiental","PlatoAmbiental.html#method-i-getGeiDiarioPlato","()","<p>Retorna los gases de efecto invernadero producidos en un día por un plato\n"],["getGeix100gr","Alimento","Alimento.html#method-i-getGeix100gr","()","<p>Como el valor de gei está en 1 Kg, se hace la equivalencia a 100 gr\n"],["getIndiceEnergia","Alimento","Alimento.html#method-i-getIndiceEnergia","(cantidad)","<p>Retorna un índice de energía según la cantidad en gr del alimento\n"],["getIndiceHuellaCarbono","Alimento","Alimento.html#method-i-getIndiceHuellaCarbono","(cantidad)","<p>Retorna un índice de huella de carbono según la cantidad en gr del alimento\n"],["getPorcentajeCarbohidratosPlato","PlatoNutricional","PlatoNutricional.html#method-i-getPorcentajeCarbohidratosPlato","()","<p>Retorna el porcentaje que aporta los carbohidratos en el valor energético de un plato\n"],["getPorcentajeLipidosPlato","PlatoNutricional","PlatoNutricional.html#method-i-getPorcentajeLipidosPlato","()","<p>Retorna el porcentaje que aporta los lípidos en el valor energético de un plato\n"],["getPorcentajeProteinasPlato","PlatoNutricional","PlatoNutricional.html#method-i-getPorcentajeProteinasPlato","()","<p>Retorna el porcentaje que aporta las porteinas en el valor energético de un plato\n"],["getProcentajeCarbohidratos","Lista","Lista.html#method-i-getProcentajeCarbohidratos","()","<p>Retorna en porcenataje el aporte de carbohidratos en el valor energético\n"],["getProcentajeLipidos","Lista","Lista.html#method-i-getProcentajeLipidos","()","<p>Retorna en porcenataje el aporte de lípidos en el valor energético\n"],["getProcentajeProteinas","Lista","Lista.html#method-i-getProcentajeProteinas","()","<p>Retorna en porcenataje el aporte de proteinas en el valor energético\n"],["getTerrenoPlato","PlatoAmbiental","PlatoAmbiental.html#method-i-getTerrenoPlato","()","<p>Retorna el uso de terreno producido en un año por un plato\n"],["getTerrenoTotal","Lista","Lista.html#method-i-getTerrenoTotal","()","<p>Retorna el uso de terreno en un año\n"],["getValorEnergetico","Alimento","Alimento.html#method-i-getValorEnergetico","()","<p>Define la proporcion de cada nutriente en el aporte energético\n"],["getValorEnergeticoPlato","PlatoNutricional","PlatoNutricional.html#method-i-getValorEnergeticoPlato","()","<p>Retorna el valor energético de un plato\n"],["huellaNutricional","PlatoAmbiental","PlatoAmbiental.html#method-i-huellaNutricional","()","<p>Retorna un número en el rango [1,3] que corresponde a la huella nutricional de un plato\n"],["incrementarPreciosDirectamente","Object","Object.html#method-i-incrementarPreciosDirectamente","()",""],["incrementarPreciosWithPorcentaje","Object","Object.html#method-i-incrementarPreciosWithPorcentaje","()",""],["isVacia","Lista","Lista.html#method-i-isVacia","()","<p>Retorna verdadero si la lista está vacia, en otro caso retorna falso\n"],["mediaHuellaNutricional","Object","Object.html#method-i-mediaHuellaNutricional","()",""],["new","Alimento","Alimento.html#method-c-new","(nombre, proteinas, carbohidratos, lipidos, gei, terreno)",""],["new","Lista","Lista.html#method-c-new","(head = nil, tail = nil, arrayElementos = nil)",""],["new","PlatoAmbiental","PlatoAmbiental.html#method-c-new","(nombre, listaAlimentos, listaCantidades)",""],["new","PlatoNutricional","PlatoNutricional.html#method-c-new","(nombre, listaAlimentos, listaCantidades)",""],["pop","Lista","Lista.html#method-i-pop","()","<p>Extae el último elemento\n"],["push","Lista","Lista.html#method-i-push","(elemento)","<p>Inserta un elemento por la cola\n"],["pushAll","Lista","Lista.html#method-i-pushAll","(arrayElementos)","<p>Inserta varios elementos por la cola\n"],["shift","Lista","Lista.html#method-i-shift","()","<p>Extae el primer elemento\n"],["to_s","Alimento","Alimento.html#method-i-to_s","()","<p>Retorna el Alimento formateado\n"],["to_s","Lista","Lista.html#method-i-to_s","()","<p>Retorna la Lista formateada\n"],["to_s","PlatoNutricional","PlatoNutricional.html#method-i-to_s","()","<p>Retorna el Plato formateado\n"],["unshift","Lista","Lista.html#method-i-unshift","(elemento)","<p>Inserta un elemento por la cabeza\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in huella.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  huella (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["README","","README_md.html","","<p>Título: Práctica # 6, 7, 8 y 9\n<p><strong>Fecha:</strong> 18 de Diciembre del 2019<br>\n<strong>Alumno:</strong> Miguel Angel Ordoñez<br>\n<strong>Universidad:</strong> ...\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["huella.gemspec","","huella_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"]]}}